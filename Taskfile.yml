version: "3"

tasks:
  install:
    desc: "Install dependencies"
    cmds:
      - "pnpm install"

  next_dev:
    desc: "Development server for Next.js"
    cmds:
      - "pnpm next dev --turbo"

  next_build:
    desc: "Build Next.js project"
    cmds:
      - "NODE_ENV=production pnpm next build"

  next_start:
    desc: "Start Next.js project"
    cmds:
      - "pnpm next start"

  next_lint:
    desc: "Lint Next.js project"
    cmds:
      - "pnpm next lint"

  format:
    desc: "Format code"
    cmds:
      - "pnpm dprint fmt"

  postinstall:
    desc: "Install app dependencies for Electron"
    cmds:
      - "pnpm electron-builder install-app-deps"

  electron_dist:
    desc: "Build Electron for distribution in directory mode"
    cmds:
      - "pnpm electron-builder --dir"

  electron_build:
    desc: "Build Electron using tsup"
    cmds:
      - "pnpm tsup"

  build:
    desc: "Build both Next.js and Electron projects"
    cmds:
      - task next_build electron_build --parallel

  dist:
    desc: "Distribute both Next.js and Electron projects"
    cmds:
      - "task next_build && task electron_dist"

  dev:
    desc: "Development mode for both Electron and Next.js"
    cmds:
      - task next_dev electron_dev electron_build_watch --parallel
  electron_build_watch:
    desc: "Watch mode for Electron with tsup"
    cmds:
      - "pnpm tsup --watch"

  electron_dev:
    desc: "Development mode for Electron"
    cmds:
      - "pnpm cross-env NODE_ENV='development' nodemon"

  docker_build:
    desc: "Build Docker image"
    cmds:
      - "docker build -t siraat ."

  docker_run:
    desc: "Run Docker container"
    cmds:
      - "docker run -d -p 3000:3000 siraat"
  release:linux:
    desc: Build and release for Linux
    cmds:
      - pnpm electron-builder --linux -p always -c.snap.publish=github

  release:mac:
    desc: Build and release for macOS
      - pnpm electron-builder --mac -p always

  release:win:
    desc: Build and release for Windows
    cmds:
      - pnpm electron-builder --win -p always

  release:all:
    desc: Build and release for all platforms
    cmds:
      - task: release:linux
      - task: release:mac
      - task: release:win

  dist:linux:
    desc: Build distribution for Linux
    cmds:
      - pnpm electron-builder --linux -p never

  dist:linux:deb-arm64:
    desc: Build ARM64 DEB distribution for Linux
    cmds:
      - pnpm electron-builder --linux deb:arm64 -p never

  dist:linux:rpm-arm64:
    desc: Build ARM64 RPM distribution for Linux
    cmds:
      - pnpm electron-builder --linux rpm:arm64 -p never

  dist:mac:
    desc: Build distribution for macOS (x64)
    cmds:
      - pnpm electron-builder --mac dmg:x64 -p never

  dist:mac:arm64:
    desc: Build distribution for macOS (ARM64)
    cmds:
      - pnpm electron-builder --mac dmg:arm64 -p never

  dist:win:
    desc: Build distribution for Windows
    cmds:
      - pnpm electron-builder --win -p never

  dist:win:x64:
    desc: Build x64 distribution for Windows
    cmds:
      - pnpm electron-builder --win nsis-web:x64 -p never

  dist:all:
    desc: Build distributions for all platforms
    cmds:
      - pnpm electron-builder --win --mac --linux -p never

  changelog:
    desc: Generate changelog
    cmds:
      - npx --yes auto-changelog

  clean:
    desc: Clean build and dist directories
    cmds:
      - rm -rf build dist
